"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var ranged_1 = require("./ranged");
var inversify_1 = require("inversify");
var theia_diagram_server_1 = require("../theia-diagram-server");
var browser_1 = require("@theia/languages/lib/browser");
var CompletionLabelEditor = /** @class */ (function () {
    function CompletionLabelEditor() {
    }
    CompletionLabelEditor.prototype.edit = function (element) {
        return __awaiter(this, void 0, void 0, function () {
            var range, diagramServer, connector, languageClient, uri, completions, completionItems, quickPickItems, pick, changes;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        range = ranged_1.toLsRange(element.range);
                        return [4 /*yield*/, this.diagramServerProvider()];
                    case 1:
                        diagramServer = _a.sent();
                        return [4 /*yield*/, diagramServer.getConnector()];
                    case 2:
                        connector = _a.sent();
                        if (!(connector.quickPickService && connector.workspace)) return [3 /*break*/, 7];
                        return [4 /*yield*/, connector.getLanguageClient()];
                    case 3:
                        languageClient = _a.sent();
                        uri = diagramServer.getSourceUri();
                        return [4 /*yield*/, languageClient.sendRequest(browser_1.CompletionRequest.type, {
                                textDocument: { uri: diagramServer.getSourceUri() },
                                position: range.start
                            })];
                    case 4:
                        completions = _a.sent();
                        if (!completions) return [3 /*break*/, 7];
                        completionItems = (completions["items"])
                            ? completions.items
                            : completions;
                        quickPickItems = completionItems.map(function (i) {
                            return {
                                label: i.textEdit.newText,
                                value: i
                            };
                        });
                        return [4 /*yield*/, connector.quickPickService.show(quickPickItems)];
                    case 5:
                        pick = _a.sent();
                        if (!(pick && pick.textEdit)) return [3 /*break*/, 7];
                        changes = {};
                        changes[uri] = [__assign({}, pick.textEdit, { range: range })];
                        return [4 /*yield*/, connector.workspace.applyEdit({
                                changes: changes
                            })];
                    case 6:
                        _a.sent();
                        _a.label = 7;
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        inversify_1.inject(theia_diagram_server_1.TheiaDiagramServerProvider),
        __metadata("design:type", Function)
    ], CompletionLabelEditor.prototype, "diagramServerProvider", void 0);
    CompletionLabelEditor = __decorate([
        inversify_1.injectable()
    ], CompletionLabelEditor);
    return CompletionLabelEditor;
}());
exports.CompletionLabelEditor = CompletionLabelEditor;
//# sourceMappingURL=completion-label-edit.js.map