"use strict";
/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const window_1 = require("./window");
class TelemetryReporter {
    constructor(...args) {
    }
    sendTelemetryEvent(...args) {
        window_1.window.lspClient.sendTelemetryEvent(args);
    }
    dispose() {
        return __awaiter(this, void 0, void 0, function* () {
            // no-op
        });
    }
}
exports.default = TelemetryReporter;
//# sourceMappingURL=vscode-extension-telemetry.js.map