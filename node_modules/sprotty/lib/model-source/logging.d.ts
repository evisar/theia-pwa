import { ILogger, LogLevel } from "../utils/logging";
import { Action } from "../base/actions/action";
import { ModelSource } from "./model-source";
export declare class LoggingAction implements Action {
    readonly severity: string;
    readonly time: string;
    readonly caller: string;
    readonly message: string;
    readonly params: string[];
    static readonly KIND: string;
    readonly kind: string;
    constructor(severity: string, time: string, caller: string, message: string, params: string[]);
}
/**
 * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.
 */
export declare class ForwardingLogger implements ILogger {
    protected modelSourceProvider: () => Promise<ModelSource>;
    logLevel: LogLevel;
    constructor(modelSourceProvider: () => Promise<ModelSource>, logLevel: LogLevel);
    error(thisArg: any, message: string, ...params: any[]): void;
    warn(thisArg: any, message: string, ...params: any[]): void;
    info(thisArg: any, message: string, ...params: any[]): void;
    log(thisArg: any, message: string, ...params: any[]): void;
    protected forward(thisArg: any, message: string, logLevel: LogLevel, params: any[]): void;
}
//# sourceMappingURL=logging.d.ts.map