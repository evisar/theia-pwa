import { Bounds, Point } from '../../utils/geometry';
import { SParentElement, SChildElement } from "../../base/model/smodel";
import { AbstractLayout } from './abstract-layout';
import { AbstractLayoutOptions, HAlignment, VAlignment } from './layout-options';
import { BoundsData } from './hidden-bounds-updater';
import { LayoutContainer } from './model';
import { StatefulLayouter } from './layout';
export interface StackLayoutOptions extends AbstractLayoutOptions {
    paddingFactor: number;
    vAlign: VAlignment;
    hAlign: HAlignment;
}
export declare class StackLayouter extends AbstractLayout<StackLayoutOptions> {
    static KIND: string;
    protected getChildrenSize(container: SParentElement & LayoutContainer, options: StackLayoutOptions, layouter: StatefulLayouter): {
        width: number;
        height: number;
    };
    protected layoutChild(child: SChildElement, boundsData: BoundsData, bounds: Bounds, childOptions: StackLayoutOptions, containerOptions: StackLayoutOptions, currentOffset: Point, maxWidth: number, maxHeight: number): Point;
    protected getDefaultLayoutOptions(): StackLayoutOptions;
    protected spread(a: StackLayoutOptions, b: StackLayoutOptions): StackLayoutOptions;
}
//# sourceMappingURL=stack-layout.d.ts.map