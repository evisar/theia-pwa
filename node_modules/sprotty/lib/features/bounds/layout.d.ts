import { ILogger } from '../../utils/logging';
import { InstanceRegistry } from "../../utils/registry";
import { Bounds } from "../../utils/geometry";
import { SParentElement, SModelElement } from "../../base/model/smodel";
import { LayoutContainer } from "./model";
import { BoundsData } from "./hidden-bounds-updater";
export declare class LayoutRegistry extends InstanceRegistry<ILayout> {
    constructor();
}
export declare class Layouter {
    protected layoutRegistry: LayoutRegistry;
    protected logger: ILogger;
    constructor(layoutRegistry: LayoutRegistry, logger: ILogger);
    layout(element2boundsData: Map<SModelElement, BoundsData>): void;
}
export declare class StatefulLayouter {
    private readonly element2boundsData;
    private readonly layoutRegistry;
    readonly log: ILogger;
    private toBeLayouted;
    constructor(element2boundsData: Map<SModelElement, BoundsData>, layoutRegistry: LayoutRegistry, log: ILogger);
    getBoundsData(element: SModelElement): BoundsData;
    layout(): void;
    protected doLayout(element: SParentElement & LayoutContainer): Bounds;
}
export interface ILayout {
    layout(container: SParentElement & LayoutContainer, layouter: StatefulLayouter): void;
}
//# sourceMappingURL=layout.d.ts.map