import { Animation } from "../../base/animations/animation";
import { SModelRoot, SModelElement } from "../../base/model/smodel";
import { CommandExecutionContext } from "../../base/commands/command";
import { BoundsAware } from './model';
import { Dimension } from '../../utils/geometry';
export interface ResolvedElementResize {
    element: SModelElement & BoundsAware;
    fromDimension: Dimension;
    toDimension: Dimension;
}
export declare class ResizeAnimation extends Animation {
    protected model: SModelRoot;
    elementResizes: Map<string, ResolvedElementResize>;
    protected reverse: boolean;
    constructor(model: SModelRoot, elementResizes: Map<string, ResolvedElementResize>, context: CommandExecutionContext, reverse?: boolean);
    tween(t: number): SModelRoot;
}
//# sourceMappingURL=resize.d.ts.map