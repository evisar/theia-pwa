import { Bounds, Dimension, Point } from "../../utils/geometry";
import { SModelElement, SModelElementSchema, SParentElement, SChildElement } from "../../base/model/smodel";
import { SModelExtension } from "../../base/model/smodel-extension";
import { Locateable } from '../move/model';
export declare const boundsFeature: unique symbol;
export declare const layoutContainerFeature: unique symbol;
export declare const layoutableChildFeature: unique symbol;
export declare const alignFeature: unique symbol;
/**
 * Model elements that implement this interface have a position and a size.
 */
export interface BoundsAware extends SModelExtension {
    bounds: Bounds;
}
/**
 * Used to identify model elements that specify a layout to apply to their children.
 */
export interface LayoutContainer extends LayoutableChild {
    layout: string;
}
export declare type ModelLayoutOptions = {
    [key: string]: string | number | boolean;
};
export interface LayoutableChild extends SModelExtension, BoundsAware {
    layoutOptions?: ModelLayoutOptions;
}
/**
 * Used to adjust elements whose bounding box is not at the origin, e.g.
 * labels, or pre-rendered SVG figures.
 */
export interface Alignable extends SModelExtension {
    alignment: Point;
}
export declare function isBoundsAware(element: SModelElement): element is SModelElement & BoundsAware;
export declare function isLayoutContainer(element: SModelElement): element is SParentElement & LayoutContainer;
export declare function isLayoutableChild(element: SModelElement): element is SParentElement & LayoutableChild;
export declare function isSizeable(element: SModelElement): element is SModelElement & BoundsAware;
export declare function isAlignable(element: SModelElement): element is SModelElement & Alignable;
export declare function getAbsoluteBounds(element: SModelElement): Bounds;
/**
 * Serializable schema for SShapeElement.
 */
export interface SShapeElementSchema extends SModelElementSchema {
    position?: Point;
    size?: Dimension;
    children?: SModelElementSchema[];
    layoutOptions?: ModelLayoutOptions;
}
/**
 * Abstract class for elements with a position and a size.
 */
export declare abstract class SShapeElement extends SChildElement implements BoundsAware, Locateable, LayoutableChild {
    position: Point;
    size: Dimension;
    layoutOptions?: ModelLayoutOptions;
    bounds: Bounds;
    localToParent(point: Point | Bounds): Bounds;
    parentToLocal(point: Point | Bounds): Bounds;
}
//# sourceMappingURL=model.d.ts.map