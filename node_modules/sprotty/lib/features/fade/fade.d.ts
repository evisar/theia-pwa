import { VNode } from "snabbdom/vnode";
import { Animation } from "../../base/animations/animation";
import { CommandExecutionContext } from "../../base/commands/command";
import { SModelRoot, SModelElement } from "../../base/model/smodel";
import { IVNodeDecorator } from "../../base/views/vnode-decorators";
import { Fadeable } from "./model";
export interface ResolvedElementFade {
    element: SModelElement & Fadeable;
    type: 'in' | 'out';
}
export declare class FadeAnimation extends Animation {
    protected model: SModelRoot;
    elementFades: ResolvedElementFade[];
    protected removeAfterFadeOut: boolean;
    constructor(model: SModelRoot, elementFades: ResolvedElementFade[], context: CommandExecutionContext, removeAfterFadeOut?: boolean);
    tween(t: number, context: CommandExecutionContext): SModelRoot;
}
export declare class ElementFader implements IVNodeDecorator {
    decorate(vnode: VNode, element: SModelElement): VNode;
    postUpdate(): void;
}
//# sourceMappingURL=fade.d.ts.map