import { Action } from '../../base/actions/action';
import { SButton } from '../button/model';
import { IButtonHandler } from '../button/button-handler';
/**
 * Sent from the client to the model source to recalculate a diagram when elements
 * are collapsed/expanded by the client.
 */
export declare class CollapseExpandAction {
    readonly expandIds: string[];
    readonly collapseIds: string[];
    static KIND: string;
    kind: string;
    constructor(expandIds: string[], collapseIds: string[]);
}
/**
 * Programmatic action for expanding or collapsing all elements.
 */
export declare class CollapseExpandAllAction {
    readonly expand: boolean;
    static KIND: string;
    kind: string;
    /**
     * If `expand` is true, all elements are expanded, othewise they are collapsed.
     */
    constructor(expand?: boolean);
}
export declare class ExpandButtonHandler implements IButtonHandler {
    static TYPE: string;
    buttonPressed(button: SButton): Action[];
}
//# sourceMappingURL=expand.d.ts.map