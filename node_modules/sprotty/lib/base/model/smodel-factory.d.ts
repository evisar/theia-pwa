import { ProviderRegistry } from '../../utils/registry';
import { SChildElement, SModelElement, SModelElementSchema, SModelRoot, SModelRootSchema, SParentElement } from './smodel';
/**
 * A model factory transforms a serializable model schema into the model representation that is used
 * internally by sprotty.
 */
export interface IModelFactory {
    createElement(schema: SModelElementSchema | SModelElement, parent?: SParentElement): SChildElement;
    createRoot(schema: SModelRootSchema | SModelRoot): SModelRoot;
    createSchema(element: SModelElement): SModelElementSchema;
}
/**
 * The default model factory creates SModelRoot for the root element and SChildElement for all other
 * model elements.
 */
export declare class SModelFactory implements IModelFactory {
    protected readonly registry: SModelRegistry;
    constructor(registry: SModelRegistry);
    createElement(schema: SModelElementSchema | SModelElement, parent?: SParentElement): SChildElement;
    createRoot(schema: SModelRootSchema | SModelRoot): SModelRoot;
    createSchema(element: SModelElement): SModelElementSchema;
    protected initializeElement(element: SModelElement, schema: SModelElementSchema | SModelElement): SModelElement;
    protected isReserved(element: SModelElement, propertyName: string): boolean;
    protected initializeParent(parent: SParentElement, schema: SModelElementSchema | SParentElement): SParentElement;
    protected initializeChild(child: SChildElement, schema: SModelElementSchema, parent?: SParentElement): SChildElement;
    protected initializeRoot(root: SModelRoot, schema: SModelRootSchema | SModelRoot): SModelRoot;
}
export declare const EMPTY_ROOT: Readonly<SModelRootSchema>;
/**
 * Used to bind a model element type to a class constructor in the SModelRegistry.
 */
export interface SModelElementRegistration {
    type: string;
    constr: new () => SModelElement;
}
/**
 * Model element classes registered here are considered automatically when constructring a model from its schema.
 */
export declare class SModelRegistry extends ProviderRegistry<SModelElement, void> {
    constructor(registrations: SModelElementRegistration[]);
}
//# sourceMappingURL=smodel-factory.d.ts.map