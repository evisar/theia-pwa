import { Container, interfaces } from "inversify";
export interface ViewerOptions {
    baseDiv: string;
    baseClass: string;
    hiddenDiv: string;
    hiddenClass: string;
    popupDiv: string;
    popupClass: string;
    popupClosedClass: string;
    needsClientLayout: boolean;
    needsServerLayout: boolean;
    popupOpenDelay: number;
    popupCloseDelay: number;
}
export declare const defaultViewerOptions: () => ViewerOptions;
/**
 * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for
 * options that are not specified.
 */
export declare function configureViewerOptions(context: {
    bind: interfaces.Bind;
    isBound: interfaces.IsBound;
    rebind: interfaces.Rebind;
}, options: Partial<ViewerOptions>): void;
/**
 * Utility function to partially override the currently configured viewer options in a DI container.
 */
export declare function overrideViewerOptions(container: Container, options: Partial<ViewerOptions>): ViewerOptions;
//# sourceMappingURL=viewer-options.d.ts.map