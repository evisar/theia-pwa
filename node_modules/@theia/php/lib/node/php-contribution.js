"use strict";
/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
//import * as os from 'os';
var path = require("path");
// import * as glob from 'glob';
var inversify_1 = require("inversify");
// import { DEBUG_MODE } from '@theia/core/lib/node';
var node_1 = require("@theia/languages/lib/node");
var common_1 = require("../common");
// export type ConfigurationType = 'config_win' | 'config_mac' | 'config_linux';
// export const configurations = new Map<typeof process.platform, ConfigurationType>();
// configurations.set('darwin', 'config_mac');
// configurations.set('win32', 'config_win');
// configurations.set('linux', 'config_linux');
var PHPContribution = /** @class */ (function (_super) {
    __extends(PHPContribution, _super);
    function PHPContribution() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = common_1.PHP_LANGUAGE_ID;
        _this.name = common_1.PHP_LANGUAGE_NAME;
        return _this;
    }
    PHPContribution.prototype.start = function (clientConnection) {
        var lsp = path.join(__dirname, '../..', 'vendor', 'felixfbecker', 'language-server', 'bin', 'php-language-server.php');
        var command = 'php';
        var args = [
            lsp
        ];
        console.info("starting PHP language server :)");
        console.info(lsp);
        var serverConnection = this.createProcessStreamConnection(command, args);
        // serverConnection.reader.onError(err => console.log(err));
        this.forward(clientConnection, serverConnection);
    };
    PHPContribution.prototype.onDidFailSpawnProcess = function (error) {
        _super.prototype.onDidFailSpawnProcess.call(this, error);
        console.error("Error starting php language server.");
        console.error("Please make sure it is installed on your system.");
    };
    PHPContribution = __decorate([
        inversify_1.injectable()
    ], PHPContribution);
    return PHPContribution;
}(node_1.BaseLanguageServerContribution));
exports.PHPContribution = PHPContribution;
//# sourceMappingURL=php-contribution.js.map