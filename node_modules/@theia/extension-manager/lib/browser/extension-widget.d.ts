/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Message } from '@phosphor/messaging';
import { DisposableCollection } from '@theia/core';
import { OpenerService } from '@theia/core/lib/browser';
import { Extension, ExtensionManager } from '../common';
import { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';
import * as React from 'react';
export declare class ExtensionWidget extends ReactWidget {
    protected readonly extensionManager: ExtensionManager;
    protected readonly openerService: OpenerService;
    static SEARCH_DELAY: number;
    protected extensions: Extension[];
    protected readonly toDisposeOnFetch: DisposableCollection;
    protected readonly toDisposeOnSearch: DisposableCollection;
    protected ready: boolean;
    constructor(extensionManager: ExtensionManager, openerService: OpenerService);
    protected onActivateRequest(msg: Message): void;
    protected fetchExtensions(): void;
    protected render(): React.ReactNode;
    protected searchFieldKeyUp: () => void;
    protected renderSearchField(): React.ReactNode;
    protected findSearchField(): HTMLInputElement | null;
    protected renderExtensionList(): React.ReactNode;
    protected extensionClick: (extension: Extension) => Promise<object | undefined>;
    private renderExtension;
    protected createExtensionClassName(extension: Extension): string;
    protected installButtonClick: (extension: Extension) => void;
    protected createButton(extension: Extension): React.ReactNode;
    protected getTooltip(extension: Extension): string;
}
//# sourceMappingURL=extension-widget.d.ts.map