"use strict";
/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var browser_1 = require("@theia/languages/lib/browser");
var go_client_contribution_1 = require("./go-client-contribution");
var go_command_contribution_1 = require("./go-command-contribution");
var core_1 = require("@theia/core");
var go_commands_1 = require("./go-commands");
var go_menu_contribution_1 = require("./go-menu-contribution");
var go_calhierarchy_service_1 = require("./go-calhierarchy-service");
var callhierarchy_service_1 = require("@theia/callhierarchy/lib/browser/callhierarchy-service");
var textmate_1 = require("@theia/monaco/lib/browser/textmate");
var go_grammar_contribution_1 = require("./go-grammar-contribution");
exports.default = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    bind(browser_1.LanguageClientContribution).to(go_client_contribution_1.GoClientContribution).inSingletonScope();
    bind(core_1.MenuContribution).to(go_menu_contribution_1.GoMenuContribution).inSingletonScope();
    bind(core_1.CommandContribution).to(go_command_contribution_1.GoCommandContribution).inSingletonScope();
    bind(go_commands_1.GoCommands).to(go_commands_1.GoCommands).inSingletonScope();
    bind(go_calhierarchy_service_1.GoCallHierarchyService).toSelf().inSingletonScope();
    bind(callhierarchy_service_1.CallHierarchyService).toDynamicValue(function (ctx) { return ctx.container.get(go_calhierarchy_service_1.GoCallHierarchyService); }).inSingletonScope();
    bind(textmate_1.LanguageGrammarDefinitionContribution).to(go_grammar_contribution_1.GoGrammarContribution).inSingletonScope();
});
//# sourceMappingURL=go-frontend-module.js.map