"use strict";
/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var browser_1 = require("@theia/editor/lib/browser");
var inversify_1 = require("inversify");
var GoMenuContribution = /** @class */ (function () {
    function GoMenuContribution() {
    }
    GoMenuContribution.prototype.registerMenus = function (menus) {
        menus.registerMenuAction(browser_1.EDITOR_CONTEXT_MENU.concat("2_go"), {
            commandId: "go.add.tags.client",
            label: "Go: Add Tags To Struct Fields"
        });
        menus.registerMenuAction(browser_1.EDITOR_CONTEXT_MENU.concat("2_go"), {
            commandId: "go.remove.tags.client",
            label: "Go: Remove Tags From Struct Fields"
        });
        menus.registerMenuAction(browser_1.EDITOR_CONTEXT_MENU.concat("2_go"), {
            commandId: "go.test.generate.function.client",
            label: "Go: Generate Unit Tests For Function"
        });
        menus.registerMenuAction(browser_1.EDITOR_CONTEXT_MENU.concat("2_go"), {
            commandId: "go.test.generate.file.client",
            label: "Go: Generate Unit Tests For File"
        });
        menus.registerMenuAction(browser_1.EDITOR_CONTEXT_MENU.concat("2_go"), {
            commandId: "go.test.generate.package.client",
            label: "Go: Generate Unit Tests For Package"
        });
        menus.registerMenuAction(browser_1.EDITOR_CONTEXT_MENU.concat("2_go"), {
            commandId: "go.show.commands.client",
            label: "Go: Show All Commands..."
        });
        menus.registerMenuAction(browser_1.EDITOR_CONTEXT_MENU.concat("2_go"), {
            commandId: "go.fill.struct.client",
            label: "Go: Fill struct"
        });
    };
    GoMenuContribution = __decorate([
        inversify_1.injectable()
    ], GoMenuContribution);
    return GoMenuContribution;
}());
exports.GoMenuContribution = GoMenuContribution;
//# sourceMappingURL=go-menu-contribution.js.map