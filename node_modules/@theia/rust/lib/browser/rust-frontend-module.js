"use strict";
/*
 * Copyright (C) 2018 David Craven and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var browser_1 = require("@theia/languages/lib/browser");
var textmate_1 = require("@theia/monaco/lib/browser/textmate");
var rust_client_contribution_1 = require("./rust-client-contribution");
var rust_grammar_contribution_1 = require("./rust-grammar-contribution");
var rust_preferences_1 = require("./rust-preferences");
exports.default = new inversify_1.ContainerModule(function (bind) {
    rust_preferences_1.bindRustPreferences(bind);
    bind(rust_client_contribution_1.RustClientContribution).toSelf().inSingletonScope();
    bind(browser_1.LanguageClientContribution).toDynamicValue(function (ctx) {
        return ctx.container.get(rust_client_contribution_1.RustClientContribution);
    }).inSingletonScope();
    bind(textmate_1.LanguageGrammarDefinitionContribution).to(rust_grammar_contribution_1.RustGrammarContribution)
        .inSingletonScope();
});
//# sourceMappingURL=rust-frontend-module.js.map