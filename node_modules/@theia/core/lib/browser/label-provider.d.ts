/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import URI from '../common/uri';
import { ContributionProvider } from '../common/contribution-provider';
import { MaybePromise } from '../common/types';
export declare const FOLDER_ICON = "fa fa-folder";
export declare const FILE_ICON = "fa fa-file";
export declare const LabelProviderContribution: unique symbol;
export interface LabelProviderContribution {
    /**
     * whether this contribution can handle the given element and with what priority.
     * All contributions are ordered by the returned number if greater than zero. The highest number wins.
     * If two or more contributions return the same positive number one of those will be used. It is undefined which one.
     */
    canHandle(element: object): number;
    /**
     * returns an icon class for the given element.
     */
    getIcon?(element: object): MaybePromise<string>;
    /**
     * returns a short name for the given element.
     */
    getName?(element: object): string;
    /**
     * returns a long name for the given element.
     */
    getLongName?(element: object): string;
}
export declare class DefaultUriLabelProviderContribution implements LabelProviderContribution {
    canHandle(uri: object): number;
    getIcon(uri: URI): MaybePromise<string>;
    protected getFileIcon(uri: URI): string | undefined;
    getName(uri: URI): string;
    getLongName(uri: URI): string;
}
export declare class LabelProvider {
    protected readonly contributionProvider: ContributionProvider<LabelProviderContribution>;
    constructor(contributionProvider: ContributionProvider<LabelProviderContribution>);
    getIcon(element: object): Promise<string>;
    getName(element: object): string;
    getLongName(element: object): string;
    protected findContribution(element: object): LabelProviderContribution[];
}
//# sourceMappingURL=label-provider.d.ts.map