"use strict";
/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var common_1 = require("../../common");
var keybinding_1 = require("../keybinding");
var quick_open_model_1 = require("./quick-open-model");
var QuickCommandService = /** @class */ (function () {
    function QuickCommandService() {
        this.prefix = '>';
        this.description = 'Quick Command';
    }
    /** Initialize this quick open model with the commands. */
    QuickCommandService.prototype.init = function () {
        var e_1, _a;
        // let's compute the items here to do it in the context of the currently activeElement
        this.items = [];
        var filteredAndSortedCommands = this.commands.commands.filter(function (a) { return a.label; }).sort(function (a, b) { return common_1.Command.compareCommands(a, b); });
        try {
            for (var filteredAndSortedCommands_1 = __values(filteredAndSortedCommands), filteredAndSortedCommands_1_1 = filteredAndSortedCommands_1.next(); !filteredAndSortedCommands_1_1.done; filteredAndSortedCommands_1_1 = filteredAndSortedCommands_1.next()) {
                var command = filteredAndSortedCommands_1_1.value;
                if (command.label) {
                    this.items.push(new CommandQuickOpenItem(command, this.commands, this.keybindings));
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (filteredAndSortedCommands_1_1 && !filteredAndSortedCommands_1_1.done && (_a = filteredAndSortedCommands_1.return)) _a.call(filteredAndSortedCommands_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    QuickCommandService.prototype.onType = function (lookFor, acceptor) {
        acceptor(this.items);
    };
    QuickCommandService.prototype.getModel = function () {
        return this;
    };
    QuickCommandService.prototype.getOptions = function () {
        return { fuzzyMatchLabel: true };
    };
    __decorate([
        inversify_1.inject(common_1.CommandRegistry),
        __metadata("design:type", common_1.CommandRegistry)
    ], QuickCommandService.prototype, "commands", void 0);
    __decorate([
        inversify_1.inject(keybinding_1.KeybindingRegistry),
        __metadata("design:type", keybinding_1.KeybindingRegistry)
    ], QuickCommandService.prototype, "keybindings", void 0);
    QuickCommandService = __decorate([
        inversify_1.injectable()
    ], QuickCommandService);
    return QuickCommandService;
}());
exports.QuickCommandService = QuickCommandService;
var CommandQuickOpenItem = /** @class */ (function (_super) {
    __extends(CommandQuickOpenItem, _super);
    function CommandQuickOpenItem(command, commands, keybindings) {
        var _this = _super.call(this) || this;
        _this.command = command;
        _this.commands = commands;
        _this.keybindings = keybindings;
        _this.activeElement = window.document.activeElement;
        _this.hidden = !_this.commands.getActiveHandler(_this.command.id);
        return _this;
    }
    CommandQuickOpenItem.prototype.getLabel = function () {
        return (this.command.category)
            ? this.command.category + ": " + this.command.label
            : this.command.label;
    };
    CommandQuickOpenItem.prototype.isHidden = function () {
        return this.hidden;
    };
    CommandQuickOpenItem.prototype.getIconClass = function () {
        var toggleHandler = this.commands.getToggledHandler(this.command.id);
        if (toggleHandler && toggleHandler.isToggled && toggleHandler.isToggled()) {
            return 'fa fa-check';
        }
        return _super.prototype.getIconClass.call(this);
    };
    CommandQuickOpenItem.prototype.getKeybinding = function () {
        var bindings = this.keybindings.getKeybindingsForCommand(this.command.id);
        return bindings ? bindings[0] : undefined;
    };
    CommandQuickOpenItem.prototype.run = function (mode) {
        var _this = this;
        if (mode !== quick_open_model_1.QuickOpenMode.OPEN) {
            return false;
        }
        // allow the quick open widget to close itself
        setTimeout(function () {
            // reset focus on the previously active element.
            _this.activeElement.focus();
            _this.commands.executeCommand(_this.command.id);
        }, 50);
        return true;
    };
    return CommandQuickOpenItem;
}(quick_open_model_1.QuickOpenItem));
exports.CommandQuickOpenItem = CommandQuickOpenItem;
var CommandQuickOpenContribution = /** @class */ (function () {
    function CommandQuickOpenContribution() {
    }
    CommandQuickOpenContribution.prototype.registerQuickOpenHandlers = function (handlers) {
        handlers.registerHandler(this.commandQuickOpenHandler);
    };
    __decorate([
        inversify_1.inject(QuickCommandService),
        __metadata("design:type", QuickCommandService)
    ], CommandQuickOpenContribution.prototype, "commandQuickOpenHandler", void 0);
    CommandQuickOpenContribution = __decorate([
        inversify_1.injectable()
    ], CommandQuickOpenContribution);
    return CommandQuickOpenContribution;
}());
exports.CommandQuickOpenContribution = CommandQuickOpenContribution;
//# sourceMappingURL=quick-command-service.js.map