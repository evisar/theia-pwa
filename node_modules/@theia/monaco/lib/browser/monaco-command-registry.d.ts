/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Command, CommandHandler, CommandRegistry, SelectionService } from '@theia/core';
import { EditorManager } from '@theia/editor/lib/browser';
import { MonacoEditor } from './monaco-editor';
export interface MonacoEditorCommandHandler {
    execute(editor: MonacoEditor, ...args: any[]): any;
    isEnabled?(editor: MonacoEditor, ...args: any[]): boolean;
}
export declare class MonacoCommandRegistry {
    protected readonly commands: CommandRegistry;
    protected readonly editorManager: EditorManager;
    protected readonly selectionService: SelectionService;
    static MONACO_COMMAND_PREFIX: string;
    constructor(commands: CommandRegistry, editorManager: EditorManager, selectionService: SelectionService);
    protected prefix(command: string): string;
    validate(command: string): string | undefined;
    registerCommand(command: Command, handler: MonacoEditorCommandHandler): void;
    registerHandler(command: string, handler: MonacoEditorCommandHandler): void;
    protected newHandler(monacoHandler: MonacoEditorCommandHandler): CommandHandler;
    protected execute(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): any;
    protected isEnabled(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): boolean;
    protected isVisible(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): boolean;
}
//# sourceMappingURL=monaco-command-registry.d.ts.map