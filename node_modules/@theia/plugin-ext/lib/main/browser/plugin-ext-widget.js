"use strict";
/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var core_1 = require("@theia/core");
var browser_1 = require("@theia/core/lib/browser");
var plugin_protocol_1 = require("../../common/plugin-protocol");
var react_widget_1 = require("@theia/core/lib/browser/widgets/react-widget");
var alert_message_1 = require("@theia/core/lib/browser/widgets/alert-message");
var React = require("react");
var PluginWidget = /** @class */ (function (_super) {
    __extends(PluginWidget, _super);
    function PluginWidget(hostedPluginServer, openerService) {
        var _this = _super.call(this) || this;
        _this.hostedPluginServer = hostedPluginServer;
        _this.openerService = openerService;
        _this.plugins = [];
        _this.toDisposeOnFetch = new core_1.DisposableCollection();
        _this.toDisposeOnSearch = new core_1.DisposableCollection();
        _this.ready = false;
        _this.id = 'plugins';
        _this.title.label = 'Plugins';
        _this.title.caption = 'Plugins';
        _this.title.iconClass = 'fa plugins-tab-icon';
        _this.addClass('theia-plugins');
        _this.update();
        _this.fetchPlugins();
        return _this;
    }
    PluginWidget.prototype.onActivateRequest = function (msg) {
        _super.prototype.onActivateRequest.call(this, msg);
        this.fetchPlugins();
        this.node.focus();
    };
    PluginWidget.prototype.refreshPlugins = function () {
        this.fetchPlugins();
    };
    PluginWidget.prototype.fetchPlugins = function () {
        var _this = this;
        var promise = this.hostedPluginServer.getDeployedMetadata();
        promise.then(function (pluginMetadatas) {
            _this.plugins = pluginMetadatas;
            _this.ready = true;
            _this.update();
        });
        return promise;
    };
    PluginWidget.prototype.render = function () {
        if (this.ready) {
            if (!this.plugins.length) {
                return React.createElement(alert_message_1.AlertMessage, { type: 'INFO', header: 'No plugins currently available.' });
            }
            return React.createElement(React.Fragment, null, this.renderPluginList());
        }
        else {
            return React.createElement("div", { className: 'spinnerContainer' },
                React.createElement("div", { className: 'fa fa-spinner fa-pulse fa-3x fa-fw' }));
        }
    };
    PluginWidget.prototype.renderPluginList = function () {
        var _this = this;
        var theList = [];
        this.plugins.forEach(function (plugin) {
            var container = _this.renderPlugin(plugin);
            theList.push(container);
        });
        return React.createElement("div", { id: 'pluginListContainer' }, theList);
    };
    PluginWidget.prototype.renderPlugin = function (plugin) {
        return React.createElement("div", { key: plugin.model.name, className: this.createPluginClassName(plugin) },
            React.createElement("div", { className: 'column flexcontainer pluginInformationContainer' },
                React.createElement("div", { className: 'row flexcontainer' },
                    React.createElement("div", { className: 'fa fa-puzzle-piece fa-2x fa-fw' }),
                    React.createElement("div", { title: plugin.model.name, className: 'pluginName noWrapInfo' }, plugin.model.name)),
                React.createElement("div", { className: 'row flexcontainer' },
                    React.createElement("div", { className: 'pluginVersion' }, plugin.model.version)),
                React.createElement("div", { className: 'row flexcontainer' },
                    React.createElement("div", { className: 'pluginDescription noWrapInfo' }, plugin.model.description)),
                React.createElement("div", { className: 'row flexcontainer' },
                    React.createElement("div", { className: 'pluginPublisher noWrapInfo flexcontainer' }, plugin.model.publisher))));
    };
    PluginWidget.prototype.createPluginClassName = function (plugin) {
        var classNames = ['pluginHeaderContainer'];
        return classNames.join(' ');
    };
    PluginWidget = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(plugin_protocol_1.HostedPluginServer)),
        __param(1, inversify_1.inject(browser_1.OpenerService)),
        __metadata("design:paramtypes", [Object, Object])
    ], PluginWidget);
    return PluginWidget;
}(react_widget_1.ReactWidget));
exports.PluginWidget = PluginWidget;
//# sourceMappingURL=plugin-ext-widget.js.map