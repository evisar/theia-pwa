/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { WebviewsMain, WebviewPanelShowOptions } from '../../api/plugin-api';
import { interfaces } from 'inversify';
import { RPCProtocol } from '../../api/rpc-protocol';
import { UriComponents } from '../../common/uri-components';
import { WebviewOptions, WebviewPanelOptions } from '@theia/plugin';
import { ApplicationShell } from '@theia/core/lib/browser/shell/application-shell';
import { KeybindingRegistry } from '@theia/core/lib/browser/keybinding';
import { ThemeService } from '@theia/core/lib/browser/theming';
import { ThemeRulesService } from './webview/theme-rules-service';
export declare class WebviewsMainImpl implements WebviewsMain {
    private readonly proxy;
    protected readonly shell: ApplicationShell;
    protected readonly keybindingRegistry: KeybindingRegistry;
    protected readonly themeService: ThemeService;
    protected readonly themeRulesService: ThemeRulesService;
    private readonly views;
    constructor(rpc: RPCProtocol, container: interfaces.Container);
    $createWebviewPanel(viewId: string, viewType: string, title: string, showOptions: WebviewPanelShowOptions, options: (WebviewPanelOptions & WebviewOptions) | undefined, extensionLocation: UriComponents): void;
    $disposeWebview(handle: string): void;
    $reveal(handle: string, showOptions: WebviewPanelShowOptions): void;
    $setTitle(handle: string, value: string): void;
    $setIconPath(handle: string, iconPath: {
        light: string;
        dark: string;
    } | string | undefined): void;
    $setHtml(handle: string, value: string): void;
    $setOptions(handle: string, options: WebviewOptions): void;
    $postMessage(handle: string, value: any): Thenable<boolean>;
    $registerSerializer(viewType: string): void;
    $unregisterSerializer(viewType: string): void;
    private getWebview;
    private onCloseView;
}
//# sourceMappingURL=webviews-main.d.ts.map