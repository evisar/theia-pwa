"use strict";
/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
require("../../../src/main/style/status-bar.css");
var inversify_1 = require("inversify");
var browser_1 = require("@theia/core/lib/browser");
var common_1 = require("@theia/core/lib/common");
var messaging_1 = require("@theia/core/lib/browser/messaging");
var hosted_plugin_1 = require("../../hosted/browser/hosted-plugin");
var hosted_plugin_watcher_1 = require("../../hosted/browser/hosted-plugin-watcher");
var hosted_plugin_log_viewer_1 = require("../../hosted/browser/hosted-plugin-log-viewer");
var hosted_plugin_manager_client_1 = require("../../hosted/browser/hosted-plugin-manager-client");
var commands_1 = require("./commands");
var plugin_frontend_contribution_1 = require("./plugin-frontend-contribution");
var plugin_protocol_1 = require("../../common/plugin-protocol");
var modal_notification_1 = require("./dialogs/modal-notification");
var plugin_ext_widget_1 = require("./plugin-ext-widget");
var plugin_frontend_view_contribution_1 = require("./plugin-frontend-view-contribution");
var hosted_plugin_informer_1 = require("../../hosted/browser/hosted-plugin-informer");
var hosted_plugin_preferences_1 = require("../../hosted/browser/hosted-plugin-preferences");
var hosted_plugin_controller_1 = require("../../hosted/browser/hosted-plugin-controller");
require("../../../src/main/browser/style/index.css");
var plugin_ext_deploy_command_1 = require("./plugin-ext-deploy-command");
var text_editor_service_1 = require("./text-editor-service");
var text_editor_model_service_1 = require("./text-editor-model-service");
var untitled_resource_1 = require("./editor/untitled-resource");
var context_key_1 = require("./context-key/context-key");
var context_key_service_1 = require("./context-key/context-key-service");
var menus_contribution_handler_1 = require("./menus/menus-contribution-handler");
var plugin_contribution_handler_1 = require("./plugin-contribution-handler");
var view_registry_1 = require("./view/view-registry");
var workspace_main_1 = require("./workspace-main");
var plugin_ext_api_contribution_1 = require("../../common/plugin-ext-api-contribution");
var plugin_paths_protocol_1 = require("../common/plugin-paths-protocol");
var keybindings_contribution_handler_1 = require("./keybindings/keybindings-contribution-handler");
var language_client_provider_1 = require("@theia/languages/lib/browser/language-client-provider");
var plugin_language_client_provider_1 = require("./language-provider/plugin-language-client-provider");
var language_client_contribution_provider_impl_1 = require("./language-provider/language-client-contribution-provider-impl");
var language_client_contribution_provider_1 = require("./language-provider/language-client-contribution-provider");
var storage_path_service_1 = require("./storage-path-service");
var debug_session_contribution_1 = require("@theia/debug/lib/browser/debug-session-contribution");
var plugin_debug_session_contribution_registry_1 = require("./debug/plugin-debug-session-contribution-registry");
var plugin_debug_service_1 = require("./debug/plugin-debug-service");
var debug_service_1 = require("@theia/debug/lib/common/debug-service");
exports.default = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    hosted_plugin_preferences_1.bindHostedPluginPreferences(bind);
    bind(modal_notification_1.ModalNotification).toSelf().inSingletonScope();
    bind(hosted_plugin_1.HostedPluginSupport).toSelf().inSingletonScope();
    bind(hosted_plugin_watcher_1.HostedPluginWatcher).toSelf().inSingletonScope();
    bind(hosted_plugin_log_viewer_1.HostedPluginLogViewer).toSelf().inSingletonScope();
    bind(hosted_plugin_manager_client_1.HostedPluginManagerClient).toSelf().inSingletonScope();
    bind(browser_1.FrontendApplicationContribution).to(hosted_plugin_informer_1.HostedPluginInformer).inSingletonScope();
    bind(browser_1.FrontendApplicationContribution).to(hosted_plugin_controller_1.HostedPluginController).inSingletonScope();
    bind(commands_1.OpenUriCommandHandler).toSelf().inSingletonScope();
    bind(plugin_frontend_contribution_1.PluginApiFrontendContribution).toSelf().inSingletonScope();
    bind(common_1.CommandContribution).toService(plugin_frontend_contribution_1.PluginApiFrontendContribution);
    bind(text_editor_service_1.TextEditorService).to(text_editor_service_1.TextEditorServiceImpl).inSingletonScope();
    bind(text_editor_model_service_1.EditorModelService).to(text_editor_model_service_1.EditorModelServiceImpl).inSingletonScope();
    bind(untitled_resource_1.UntitledResourceResolver).toSelf().inSingletonScope();
    bind(common_1.ResourceResolver).toService(untitled_resource_1.UntitledResourceResolver);
    bind(browser_1.FrontendApplicationContribution).toDynamicValue(function (ctx) { return ({
        onStart: function (app) {
            ctx.container.get(hosted_plugin_1.HostedPluginSupport).checkAndLoadPlugin(ctx.container);
        }
    }); });
    bind(plugin_protocol_1.HostedPluginServer).toDynamicValue(function (ctx) {
        var connection = ctx.container.get(messaging_1.WebSocketConnectionProvider);
        var hostedWatcher = ctx.container.get(hosted_plugin_watcher_1.HostedPluginWatcher);
        return connection.createProxy(plugin_protocol_1.hostedServicePath, hostedWatcher.getHostedPluginClient());
    }).inSingletonScope();
    bind(plugin_paths_protocol_1.PluginPathsService).toDynamicValue(function (ctx) {
        var connection = ctx.container.get(messaging_1.WebSocketConnectionProvider);
        return connection.createProxy(plugin_paths_protocol_1.pluginPathsServicePath);
    }).inSingletonScope();
    bind(storage_path_service_1.StoragePathService).toSelf().inSingletonScope();
    browser_1.bindViewContribution(bind, plugin_frontend_view_contribution_1.PluginFrontendViewContribution);
    bind(plugin_ext_widget_1.PluginWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(function (ctx) { return ({
        id: plugin_frontend_view_contribution_1.PluginFrontendViewContribution.PLUGINS_WIDGET_FACTORY_ID,
        createWidget: function () { return ctx.container.get(plugin_ext_widget_1.PluginWidget); }
    }); });
    bind(plugin_ext_deploy_command_1.PluginExtDeployCommandService).toSelf().inSingletonScope();
    bind(plugin_protocol_1.PluginServer).toDynamicValue(function (ctx) {
        var provider = ctx.container.get(messaging_1.WebSocketConnectionProvider);
        return provider.createProxy(plugin_protocol_1.pluginServerJsonRpcPath);
    }).inSingletonScope();
    bind(view_registry_1.ViewRegistry).toSelf().inSingletonScope();
    bind(menus_contribution_handler_1.MenusContributionPointHandler).toSelf().inSingletonScope();
    bind(keybindings_contribution_handler_1.KeybindingsContributionPointHandler).toSelf().inSingletonScope();
    bind(plugin_contribution_handler_1.PluginContributionHandler).toSelf().inSingletonScope();
    bind(workspace_main_1.TextContentResourceResolver).toSelf().inSingletonScope();
    bind(common_1.ResourceResolver).toService(workspace_main_1.TextContentResourceResolver);
    common_1.bindContributionProvider(bind, plugin_ext_api_contribution_1.MainPluginApiProvider);
    bind(language_client_contribution_provider_impl_1.LanguageClientContributionProviderImpl).toSelf().inSingletonScope();
    bind(language_client_contribution_provider_1.LanguageClientContributionProvider).toService(language_client_contribution_provider_impl_1.LanguageClientContributionProviderImpl);
    bind(plugin_language_client_provider_1.LanguageClientProviderImpl).toSelf().inSingletonScope();
    rebind(language_client_provider_1.LanguageClientProvider).toService(plugin_language_client_provider_1.LanguageClientProviderImpl);
    bind(context_key_1.ContextKeyService).to(context_key_service_1.ContextKeyServiceImpl).inSingletonScope();
    bind(plugin_debug_service_1.PluginDebugService).toSelf().inSingletonScope();
    rebind(debug_service_1.DebugService).toService(plugin_debug_service_1.PluginDebugService);
    bind(plugin_debug_session_contribution_registry_1.PluginDebugSessionContributionRegistry).toSelf().inSingletonScope();
    rebind(debug_session_contribution_1.DebugSessionContributionRegistry).toService(plugin_debug_session_contribution_registry_1.PluginDebugSessionContributionRegistry);
});
//# sourceMappingURL=plugin-ext-frontend-module.js.map