"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var pluginPath = (process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE) + './theia/plugins/';
var PluginApiContribution = /** @class */ (function () {
    function PluginApiContribution() {
    }
    PluginApiContribution.prototype.configure = function (app) {
        app.get('/plugin/:path(*)', function (req, res) {
            var filePath = req.params.path;
            res.sendFile(pluginPath + filePath);
        });
        app.get('/webview/:path(*)', function (req, res) {
            var filePath = req.params.path;
            if (filePath.charAt(0) !== '/') {
                filePath = '/' + filePath;
            }
            res.sendFile(filePath);
        });
    };
    PluginApiContribution = __decorate([
        inversify_1.injectable()
    ], PluginApiContribution);
    return PluginApiContribution;
}());
exports.PluginApiContribution = PluginApiContribution;
//# sourceMappingURL=plugin-service.js.map