"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var types_impl_1 = require("./types-impl");
var plugin_api_1 = require("../api/plugin-api");
var status_bar_item_1 = require("./status-bar/status-bar-item");
var StatusBarMessageRegistryExt = /** @class */ (function () {
    function StatusBarMessageRegistryExt(rpc) {
        this.proxy = rpc.getProxy(plugin_api_1.PLUGIN_RPC_CONTEXT.STATUS_BAR_MESSAGE_REGISTRY_MAIN);
    }
    // tslint:disable-next-line:no-any
    StatusBarMessageRegistryExt.prototype.setStatusBarMessage = function (text, arg) {
        var _this = this;
        var id;
        this.proxy.$setMessage(text, 0, 1, undefined, undefined, undefined).then(function (messageId) {
            id = messageId;
        });
        var handle;
        if (typeof arg === 'number') {
            handle = setTimeout(function () { return _this.dispose(id); }, arg);
        }
        else if (typeof arg !== 'undefined') {
            arg.then(function () { return _this.dispose(id); }, function () { return _this.dispose(id); });
        }
        return types_impl_1.Disposable.create(function () {
            _this.dispose(id);
            if (handle) {
                clearTimeout(handle);
            }
        });
    };
    StatusBarMessageRegistryExt.prototype.dispose = function (id) {
        if (!id) {
            return;
        }
        this.proxy.$dispose(id);
    };
    StatusBarMessageRegistryExt.prototype.createStatusBarItem = function (alignment, priority) {
        return new status_bar_item_1.StatusBarItemImpl(this.proxy, alignment, priority);
    };
    return StatusBarMessageRegistryExt;
}());
exports.StatusBarMessageRegistryExt = StatusBarMessageRegistryExt;
//# sourceMappingURL=status-bar-message-registry.js.map