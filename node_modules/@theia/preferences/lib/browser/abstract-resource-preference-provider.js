"use strict";
/********************************************************************************
 * Copyright (C) 2018 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var jsoncparser = require("jsonc-parser");
var core_1 = require("@theia/core");
var preferences_1 = require("@theia/core/lib/browser/preferences");
var AbstractResourcePreferenceProvider = /** @class */ (function (_super) {
    __extends(AbstractResourcePreferenceProvider, _super);
    function AbstractResourcePreferenceProvider() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // tslint:disable-next-line:no-any
        _this.preferences = {};
        return _this;
    }
    AbstractResourcePreferenceProvider.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var uri, resource;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getUri()];
                    case 1:
                        uri = _a.sent();
                        // In case if no workspace is opened there are no workspace settings.
                        // There is nothing to contribute to preferences and we just skip it.
                        if (!uri) {
                            this._ready.resolve();
                            return [2 /*return*/];
                        }
                        this.resource = this.resourceProvider(uri);
                        // Try to read the initial content of the preferences.  The provider
                        // becomes ready even if we fail reading the preferences, so we don't
                        // hang the preference service.
                        this.readPreferences()
                            .then(function () { return _this._ready.resolve(); })
                            .catch(function () { return _this._ready.resolve(); });
                        return [4 /*yield*/, this.resource];
                    case 2:
                        resource = _a.sent();
                        this.toDispose.push(resource);
                        if (resource.onDidChangeContents) {
                            this.toDispose.push(resource.onDidChangeContents(function (content) { return _this.readPreferences(); }));
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    // tslint:disable-next-line:no-any
    AbstractResourcePreferenceProvider.prototype.getPreferences = function () {
        return this.preferences;
    };
    // tslint:disable-next-line:no-any
    AbstractResourcePreferenceProvider.prototype.setPreference = function (key, value) {
        return __awaiter(this, void 0, void 0, function () {
            var resource, content, formattingOptions, edits, result, e_1, message;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.resource];
                    case 1:
                        resource = _a.sent();
                        if (!resource.saveContents) return [3 /*break*/, 7];
                        return [4 /*yield*/, this.readContents()];
                    case 2:
                        content = _a.sent();
                        formattingOptions = { tabSize: 3, insertSpaces: true, eol: '' };
                        _a.label = 3;
                    case 3:
                        _a.trys.push([3, 5, , 6]);
                        edits = jsoncparser.modify(content, [key], value, { formattingOptions: formattingOptions });
                        result = jsoncparser.applyEdits(content, edits);
                        return [4 /*yield*/, resource.saveContents(result)];
                    case 4:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 5:
                        e_1 = _a.sent();
                        message = "Failed to update the value of " + key + ". Please check if " + resource.uri.toString() + " is corrupted";
                        this.messageService.error(message);
                        console.error(message, e_1.toString());
                        return [2 /*return*/];
                    case 6:
                        this.preferences[key] = value;
                        this.onDidPreferencesChangedEmitter.fire(undefined);
                        _a.label = 7;
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    AbstractResourcePreferenceProvider.prototype.readPreferences = function () {
        return __awaiter(this, void 0, void 0, function () {
            var newContent, strippedContent, jsonErrors, resourceUri, message;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.readContents()];
                    case 1:
                        newContent = _a.sent();
                        strippedContent = jsoncparser.stripComments(newContent);
                        jsonErrors = [];
                        this.preferences = jsoncparser.parse(strippedContent, jsonErrors) || {};
                        if (!(jsonErrors.length > 0)) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.resource];
                    case 2:
                        resourceUri = (_a.sent()).uri.toString();
                        message = "Please check if " + resourceUri + " is corrupted. Parsing json errors out.";
                        this.messageService.error(message);
                        console.error.apply(console, __spread([message], jsonErrors));
                        _a.label = 3;
                    case 3:
                        this.onDidPreferencesChangedEmitter.fire(undefined);
                        return [2 /*return*/];
                }
            });
        });
    };
    AbstractResourcePreferenceProvider.prototype.readContents = function () {
        return __awaiter(this, void 0, void 0, function () {
            var resource, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 3, , 4]);
                        return [4 /*yield*/, this.resource];
                    case 1:
                        resource = _b.sent();
                        return [4 /*yield*/, resource.readContents()];
                    case 2: return [2 /*return*/, _b.sent()];
                    case 3:
                        _a = _b.sent();
                        return [2 /*return*/, ''];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        inversify_1.inject(core_1.ResourceProvider),
        __metadata("design:type", Function)
    ], AbstractResourcePreferenceProvider.prototype, "resourceProvider", void 0);
    __decorate([
        inversify_1.inject(core_1.MessageService),
        __metadata("design:type", core_1.MessageService)
    ], AbstractResourcePreferenceProvider.prototype, "messageService", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], AbstractResourcePreferenceProvider.prototype, "init", null);
    AbstractResourcePreferenceProvider = __decorate([
        inversify_1.injectable()
    ], AbstractResourcePreferenceProvider);
    return AbstractResourcePreferenceProvider;
}(preferences_1.PreferenceProvider));
exports.AbstractResourcePreferenceProvider = AbstractResourcePreferenceProvider;
//# sourceMappingURL=abstract-resource-preference-provider.js.map