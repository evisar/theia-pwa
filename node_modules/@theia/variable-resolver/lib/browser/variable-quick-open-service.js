"use strict";
/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var quick_open_1 = require("@theia/core/lib/browser/quick-open/");
var variable_1 = require("./variable");
var VariableQuickOpenService = /** @class */ (function () {
    function VariableQuickOpenService(variableRegistry, quickOpenService) {
        this.variableRegistry = variableRegistry;
        this.quickOpenService = quickOpenService;
    }
    VariableQuickOpenService.prototype.open = function () {
        this.items = this.variableRegistry.getVariables().map(function (v) { return new VariableQuickOpenItem(v.name, v.description); });
        this.quickOpenService.open(this, {
            placeholder: 'Registered variables',
            fuzzyMatchLabel: true,
            fuzzyMatchDescription: true,
            fuzzySort: true
        });
    };
    VariableQuickOpenService.prototype.onType = function (lookFor, acceptor) {
        acceptor(this.items);
    };
    VariableQuickOpenService = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(variable_1.VariableRegistry)),
        __param(1, inversify_1.inject(quick_open_1.QuickOpenService)),
        __metadata("design:paramtypes", [variable_1.VariableRegistry,
            quick_open_1.QuickOpenService])
    ], VariableQuickOpenService);
    return VariableQuickOpenService;
}());
exports.VariableQuickOpenService = VariableQuickOpenService;
var VariableQuickOpenItem = /** @class */ (function (_super) {
    __extends(VariableQuickOpenItem, _super);
    function VariableQuickOpenItem(name, description) {
        var _this = _super.call(this) || this;
        _this.name = name;
        _this.description = description;
        return _this;
    }
    VariableQuickOpenItem.prototype.getLabel = function () {
        return '${' + this.name + '}';
    };
    VariableQuickOpenItem.prototype.getDetail = function () {
        return this.description || '';
    };
    VariableQuickOpenItem.prototype.run = function (mode) {
        return false;
    };
    return VariableQuickOpenItem;
}(quick_open_1.QuickOpenItem));
exports.VariableQuickOpenItem = VariableQuickOpenItem;
//# sourceMappingURL=variable-quick-open-service.js.map