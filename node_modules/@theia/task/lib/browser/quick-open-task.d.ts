/********************************************************************************
 * Copyright (C) 2017 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { QuickOpenService, QuickOpenModel, QuickOpenItem, QuickOpenMode, QuickOpenHandler, QuickOpenOptions } from '@theia/core/lib/browser/quick-open/';
import { TaskService } from './task-service';
import { TaskConfigurations } from './task-configurations';
import { TaskInfo, TaskConfiguration } from '../common/task-protocol';
export declare class QuickOpenTask implements QuickOpenModel, QuickOpenHandler {
    protected items: QuickOpenItem[];
    readonly prefix: string;
    readonly description: string;
    protected readonly taskService: TaskService;
    protected readonly taskConfigurations: TaskConfigurations;
    protected readonly quickOpenService: QuickOpenService;
    /** Initialize this quick open model with the tasks. */
    init(): Promise<void>;
    open(): Promise<void>;
    getModel(): QuickOpenModel;
    getOptions(): QuickOpenOptions;
    attach(): void;
    onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): void;
    protected getRunningTaskLabel(task: TaskInfo): string;
}
export declare class TaskRunQuickOpenItem extends QuickOpenItem {
    protected readonly task: TaskConfiguration;
    protected taskService: TaskService;
    protected readonly provided: boolean;
    constructor(task: TaskConfiguration, taskService: TaskService, provided: boolean);
    getLabel(): string;
    getDescription(): string;
    run(mode: QuickOpenMode): boolean;
}
export declare class TaskAttachQuickOpenItem extends QuickOpenItem {
    protected readonly task: TaskInfo;
    protected readonly taskLabel: string;
    protected taskService: TaskService;
    constructor(task: TaskInfo, taskLabel: string, taskService: TaskService);
    getLabel(): string;
    run(mode: QuickOpenMode): boolean;
}
//# sourceMappingURL=quick-open-task.d.ts.map