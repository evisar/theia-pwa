/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { CommandContribution, Command, CommandRegistry, MenuContribution, MenuModelRegistry, SelectionService } from '@theia/core/lib/common';
import { ApplicationShell, KeybindingContribution, KeybindingRegistry, Widget, QuickPickService, LabelProvider } from '@theia/core/lib/browser';
import { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';
import { WidgetManager } from '@theia/core/lib/browser';
import { TerminalService } from './base/terminal-service';
import { TerminalWidgetOptions, TerminalWidget } from './base/terminal-widget';
import { FileSystem } from '@theia/filesystem/lib/common';
import { WorkspaceService } from '@theia/workspace/lib/browser';
export declare namespace TerminalMenus {
    const TERMINAL: string[];
    const TERMINAL_NEW: string[];
    const TERMINAL_TASKS: string[];
    const TERMINAL_NAVIGATOR_CONTEXT_MENU: string[];
}
export declare namespace TerminalCommands {
    const NEW: Command;
    const NEW_ACTIVE_WORKSPACE: Command;
    const TERMINAL_CLEAR: Command;
    const TERMINAL_CONTEXT: Command;
    const SPLIT: Command;
}
export declare class TerminalFrontendContribution implements TerminalService, CommandContribution, MenuContribution, KeybindingContribution, TabBarToolbarContribution {
    protected readonly shell: ApplicationShell;
    protected readonly widgetManager: WidgetManager;
    protected readonly fileSystem: FileSystem;
    protected readonly selectionService: SelectionService;
    constructor(shell: ApplicationShell, widgetManager: WidgetManager, fileSystem: FileSystem, selectionService: SelectionService);
    protected readonly labelProvider: LabelProvider;
    protected readonly quickPick: QuickPickService;
    protected readonly workspaceService: WorkspaceService;
    registerCommands(commands: CommandRegistry): void;
    registerMenus(menus: MenuModelRegistry): void;
    registerToolbarItems(toolbar: TabBarToolbarRegistry): void;
    registerKeybindings(keybindings: KeybindingRegistry): void;
    newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget>;
    activateTerminal(widget: TerminalWidget, options?: ApplicationShell.WidgetOptions): void;
    protected selectTerminalCwd(): Promise<string | undefined>;
    protected splitTerminal(widget?: Widget): Promise<void>;
    protected getTerminalRef(widget?: Widget): TerminalWidget | undefined;
    protected openTerminal(options?: ApplicationShell.WidgetOptions): Promise<void>;
    protected openActiveWorkspaceTerminal(options?: ApplicationShell.WidgetOptions): Promise<void>;
}
//# sourceMappingURL=terminal-frontend-contribution.d.ts.map