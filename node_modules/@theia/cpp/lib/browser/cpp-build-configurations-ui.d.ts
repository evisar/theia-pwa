/********************************************************************************
 * Copyright (C) 2018 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Command, CommandContribution, CommandRegistry, CommandService } from '@theia/core';
import { QuickOpenService } from '@theia/core/lib/browser/quick-open/quick-open-service';
import { QuickOpenModel, QuickOpenItem } from '@theia/core/lib/browser/quick-open/quick-open-model';
import { FileSystem } from '@theia/filesystem/lib/common';
import { PreferenceService } from '@theia/preferences/lib/browser';
import { CppBuildConfigurationManager } from './cpp-build-configurations';
import { EditorManager } from '@theia/editor/lib/browser';
export declare class CppBuildConfigurationChanger implements QuickOpenModel {
    protected readonly commandService: CommandService;
    protected readonly cppBuildConfigurations: CppBuildConfigurationManager;
    protected readonly editorManager: EditorManager;
    protected readonly fileSystem: FileSystem;
    protected readonly quickOpenService: QuickOpenService;
    protected readonly preferenceService: PreferenceService;
    readonly createItem: QuickOpenItem;
    readonly resetItem: QuickOpenItem;
    onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): Promise<void>;
    open(): void;
    /** Create a new build configuration with placeholder values.  */
    createConfig(): Promise<void>;
}
/**
 * Open the quick open menu to let the user change the active build
 * configuration.
 */
export declare const CPP_CHANGE_BUILD_CONFIGURATION: Command;
export declare class CppBuildConfigurationsContributions implements CommandContribution {
    protected readonly cppChangeBuildConfiguration: CppBuildConfigurationChanger;
    registerCommands(commands: CommandRegistry): void;
}
//# sourceMappingURL=cpp-build-configurations-ui.d.ts.map