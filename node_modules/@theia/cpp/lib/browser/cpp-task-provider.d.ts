/********************************************************************************
 * Copyright (C) 2018 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { TaskContribution, TaskProvider, TaskProviderRegistry, TaskResolver, TaskResolverRegistry } from '@theia/task/lib/browser/task-contribution';
import { CppBuildConfigurationManager, CppBuildConfiguration } from './cpp-build-configurations';
import { TaskConfiguration } from '@theia/task/lib/common/task-protocol';
/**
 * Data required to define a C/C++ build task the user could run.
 */
interface CppBuildTaskConfiguration extends TaskConfiguration {
    config: CppBuildConfiguration;
}
export declare class CppTaskProvider implements TaskContribution, TaskProvider, TaskResolver {
    protected readonly taskResolverRegistry: TaskResolverRegistry;
    protected readonly cppBuildConfigurationManager: CppBuildConfigurationManager;
    registerProviders(registry: TaskProviderRegistry): void;
    registerResolvers(registry: TaskResolverRegistry): void;
    resolveTask(task: CppBuildTaskConfiguration): Promise<TaskConfiguration>;
    /**
     * Return a C/C++ build task configuration based on `config`, or undefined
     * if `config` doesn't specify a build command.
     */
    makeTaskConfiguration(config: CppBuildConfiguration): CppBuildTaskConfiguration | undefined;
    /**
     * Return the C/C++ build tasks (one task per existing build config).
     */
    provideTasks(): Promise<CppBuildTaskConfiguration[]>;
}
export {};
//# sourceMappingURL=cpp-task-provider.d.ts.map