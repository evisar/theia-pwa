"use strict";
/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var readline = require("readline");
var fuzzy = require("fuzzy");
var inversify_1 = require("inversify");
var node_1 = require("@theia/process/lib/node");
var vscode_ripgrep_1 = require("vscode-ripgrep");
var promise_util_1 = require("@theia/core/lib/common/promise-util");
var file_uri_1 = require("@theia/core/lib/node/file-uri");
var core_1 = require("@theia/core");
var FileSearchServiceImpl = /** @class */ (function () {
    function FileSearchServiceImpl(logger, rawProcessFactory) {
        this.logger = logger;
        this.rawProcessFactory = rawProcessFactory;
    }
    FileSearchServiceImpl.prototype.find = function (searchPattern, options, cancellationToken) {
        return __awaiter(this, void 0, void 0, function () {
            var opts, args, process, result, fuzzyMatches, resultDeferred, cancel, lineReader;
            var _this = this;
            return __generator(this, function (_a) {
                opts = __assign({ fuzzyMatch: true, limit: Number.MAX_SAFE_INTEGER, useGitIgnore: true, defaultIgnorePatterns: [
                        '^.git$'
                    ] }, options);
                args = [
                    '--files',
                    '--sort-files',
                ];
                if (!options.useGitIgnore) {
                    args.push('-uu');
                }
                process = this.rawProcessFactory({
                    command: vscode_ripgrep_1.rgPath,
                    args: __spread(args, opts.rootUris.map(function (r) { return file_uri_1.FileUri.fsPath(r); }))
                });
                result = [];
                fuzzyMatches = [];
                resultDeferred = new promise_util_1.Deferred();
                if (cancellationToken) {
                    cancel = function () {
                        _this.logger.debug('Search cancelled');
                        process.kill();
                        resultDeferred.resolve([]);
                    };
                    if (cancellationToken.isCancellationRequested) {
                        cancel();
                    }
                    else {
                        cancellationToken.onCancellationRequested(cancel);
                    }
                }
                lineReader = readline.createInterface({
                    input: process.output,
                    output: process.input
                });
                lineReader.on('line', function (line) {
                    if (result.length >= opts.limit) {
                        process.kill();
                    }
                    else {
                        var fileUriStr = file_uri_1.FileUri.create(line).toString();
                        if (line.toLocaleLowerCase().indexOf(searchPattern.toLocaleLowerCase()) !== -1) {
                            result.push(fileUriStr);
                        }
                        else if (opts.fuzzyMatch && fuzzy.test(searchPattern, line)) {
                            fuzzyMatches.push(fileUriStr);
                        }
                    }
                });
                process.onError(function (e) {
                    resultDeferred.reject(e);
                });
                process.onExit(function (e) {
                    var left = opts.limit - result.length;
                    result.push.apply(result, __spread(fuzzyMatches.slice(0, Math.min(left, fuzzyMatches.length))));
                    resultDeferred.resolve(result);
                });
                return [2 /*return*/, resultDeferred.promise];
            });
        });
    };
    FileSearchServiceImpl = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(core_1.ILogger)),
        __param(1, inversify_1.inject(node_1.RawProcessFactory)),
        __metadata("design:paramtypes", [Object, Function])
    ], FileSearchServiceImpl);
    return FileSearchServiceImpl;
}());
exports.FileSearchServiceImpl = FileSearchServiceImpl;
//# sourceMappingURL=file-search-service-impl.js.map