"use strict";
/********************************************************************************
 * Copyright (C) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var bat_1 = require("./bat");
var clojure_1 = require("./clojure");
var coffeescript_1 = require("./coffeescript");
var csharp_1 = require("./csharp");
var css_1 = require("./css");
var fsharp_1 = require("./fsharp");
var groovy_1 = require("./groovy");
var handlebars_1 = require("./handlebars");
var hlsl_1 = require("./hlsl");
var ini_1 = require("./ini");
var log_1 = require("./log");
var lua_1 = require("./lua");
var make_1 = require("./make");
var objective_c_1 = require("./objective-c");
var perl_1 = require("./perl");
var powershell_1 = require("./powershell");
var pug_1 = require("./pug");
var r_1 = require("./r");
var razor_1 = require("./razor");
var shaderlab_1 = require("./shaderlab");
var sql_1 = require("./sql");
var swift_1 = require("./swift");
var vb_1 = require("./vb");
var html_1 = require("./html");
var less_1 = require("./less");
var scss_1 = require("./scss");
var markdown_1 = require("./markdown");
var shell_1 = require("./shell");
var tcl_1 = require("./tcl");
var xml_1 = require("./xml");
var xsl_1 = require("./xsl");
var textmate_contribution_1 = require("@theia/monaco/lib/browser/textmate/textmate-contribution");
exports.default = new inversify_1.ContainerModule(function (bind) {
    bind(bat_1.BatContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(bat_1.BatContribution);
    bind(clojure_1.ClojureContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(clojure_1.ClojureContribution);
    bind(coffeescript_1.CoffeescriptContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(coffeescript_1.CoffeescriptContribution);
    bind(csharp_1.CSharpContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(csharp_1.CSharpContribution);
    bind(css_1.CssContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(css_1.CssContribution);
    bind(fsharp_1.FSharpContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(fsharp_1.FSharpContribution);
    bind(groovy_1.GroovyContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(groovy_1.GroovyContribution);
    bind(handlebars_1.HandlebarsContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(handlebars_1.HandlebarsContribution);
    bind(hlsl_1.HlslContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(hlsl_1.HlslContribution);
    bind(ini_1.IniContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(ini_1.IniContribution);
    bind(log_1.LogContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(log_1.LogContribution);
    bind(lua_1.LuaContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(lua_1.LuaContribution);
    bind(make_1.MakeContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(make_1.MakeContribution);
    bind(objective_c_1.ObjectiveCContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(objective_c_1.ObjectiveCContribution);
    bind(perl_1.PerlContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(perl_1.PerlContribution);
    bind(powershell_1.PowershellContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(powershell_1.PowershellContribution);
    bind(pug_1.PugContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(pug_1.PugContribution);
    bind(r_1.RContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(r_1.RContribution);
    bind(razor_1.RazorContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(razor_1.RazorContribution);
    bind(shaderlab_1.ShaderlabContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(shaderlab_1.ShaderlabContribution);
    bind(sql_1.SqlContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(sql_1.SqlContribution);
    bind(swift_1.SwiftContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(swift_1.SwiftContribution);
    bind(vb_1.VbContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(vb_1.VbContribution);
    bind(html_1.HtmlContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(html_1.HtmlContribution);
    bind(less_1.LessContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(less_1.LessContribution);
    bind(scss_1.ScssContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(scss_1.ScssContribution);
    bind(markdown_1.MarkdownContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(markdown_1.MarkdownContribution);
    bind(shell_1.ShellContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(shell_1.ShellContribution);
    bind(tcl_1.TclContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(tcl_1.TclContribution);
    bind(xml_1.XmlContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(xml_1.XmlContribution);
    bind(xsl_1.XslContribution).toSelf().inSingletonScope();
    bind(textmate_contribution_1.LanguageGrammarDefinitionContribution).toService(xsl_1.XslContribution);
});
//# sourceMappingURL=textmate-grammars-frontend-module.js.map